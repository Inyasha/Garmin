"0","# Separate ""Time"" into component parts - converting to integers"
"0","activities_tidy <- separate(activities_raw, Time, into = (c(""minute"", ""second"", ""centisecond"")), convert = TRUE)"
"0","# Calculate total minutes, if first character is less than 5, treat as an hour unit, else, assume it's in minutes"
"0","activities_tidy$tot_mins <- ifelse((activities_tidy$minute < 5), "
"0","                                   activities_tidy$minute * 60 + activities_tidy$second,"
"0","                                   activities_tidy$minute)"
"0","# group elevation gain into categorical variables ""high"" and ""low"""
"0","activities_tidy$gain <- ifelse(activities_tidy$Elev.Gain > 250, ""high"", ""low"")"
"0","# Bin the time series values to weeks and months: https://www.r-bloggers.com/plot-weekly-or-monthly-totals-in-r/"
"0","activities_tidy$week <- as.Date(cut(activities_tidy$Date, breaks = ""week""))"
"0","activities_tidy$month <- as.Date(cut(activities_tidy$Date, breaks = ""month""))"
"0","# Gauge"
"0","#activities_tidy$cadence_gauge <- activities_tidy %>%"
"0","#        if (`Avg Cadence` > 183) {return(""purple"")}"
"0","# Calculate VO2 Max per https://www.fetcheveryone.com/forum__58727__how_does_garmin_connect_calculate_vo2_max"
"0","# calculate meters per minute"
"0","activities_tidy$mpm <- (activities_tidy$Distance*1000)/activities_tidy$tot_mins"
"0","# calculate VO2"
"0","activities_tidy$vo2 <- -4.6+0.182*activities_tidy$mpm+0.000104*activities_tidy$mpm^2"
"0","# calculate % VO2 Max"
"0","activities_tidy$percentVO2 <- (activities_tidy$Avg.HR/activities_tidy$Max.HR -0.37)/0.64"
"0","# calculate VO2 Max in ml/min/kg"
"0","activities_tidy$vo2max <- activities_tidy$vo2/activities_tidy$percentVO2"
